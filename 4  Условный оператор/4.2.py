// step 1 //
Расположите логические операторы в порядке значимости их приоритета
(от наибольшего до наименьшего).
--- Логическое отрицание not
Логическое умножение and
Логическое сложение or ---

// step 2 //
Приведенная ниже таблица истинности показывает разные комбинации истинности и ложности
значений, соединённых логическими операторами. Заполните таблицу, выбрав True или False, чтобы показать, является результатом такой комбинации истина или ложь.
True and False = False
True and True = True
False and True = False
False and False = False
True or False = True
True or True = True
False or True = True
False or False = False
not True = False
not False = True

// step 3 //
Допустим, что даны переменные a = 2, b = 4, c = 6. Заполните таблицу, выбрав True или False, чтобы показать, является результатом такой комбинации истина или ложь.
a == 2 or b > 2 = True
6 <= c and a > 3 = False
1 != b and c != 3 = True
a >= -1 or a <= b = True
not (a > 2) = True
not (c <= 10) = False

// step 4 //
Что будет выведено на экран в результате выполнения следующей программы?
num1 = 34
num2 = 81
if num1 // 9 == 0 or num2 % 9 == 0:
    print('число', num1, 'выиграло')
else:
    print('число', num2, 'выиграло')
--- число 34 выиграло ---

// step 5 //
Какое значение будет выведено на экран после выполнения следующей программы, если с клавиатуры введено число 7?

a = int(input())
if a >= 2 and a <= 17:
    b = 3
    p = a * a + b * b
else:
    b = 5
p = (a + b) * (a + b)
print(p)
--- 100 ---

// step 6 //
Принадлежность 1
Напишите программу, которая принимает целое число xx и определяет, принадлежит ли данное число указанному промежутку.
num = int(input())
if -1 < num < 17:
    print("Принадлежит")
else:
    print("Не принадлежит")

// step 7 //
Напишите программу, которая принимает целое число xx и определяет, принадлежит ли данное число указанным промежуткам.
num = int(input())
if num <= -3 or num >= 7:
    print("Принадлежит")
else:
    print("Не принадлежит")

// step 8 //
Напишите программу, которая принимает целое число xx и определяет, принадлежит ли данное число указанным промежуткам.
num = int(input())
if -30 < num <= -2 or 7 < num <= 25:
    print("Принадлежит")
else:
    print("Не принадлежит")

// step 9 //
Назовем число красивым, если оно является четырехзначным и делится нацело на 77 или на 1717. Напишите программу, определяющую, является ли введённое число красивым. Программа должна вывести «YES», если число является красивым, или «NO» в противном случае.
num = int(input())
if 1000 <= num <= 9999 and (num % 7 == 0 or num % 17 == 0):
    print("YES")
else:
    print("NO")

// step 10 //
Напишите программу, которая принимает три положительных числа и определяет, существует ли невырожденный треугольник с такими сторонами.
a, b, c = int(input()), int(input()), int(input())
if c < a + b and a < b + c and b < a + c:
    print("YES")
else:
    print("NO")

// step 11 //
Напишите программу, которая определяет, является ли год с данным номером високосным. Если год является високосным, то выведите «YES», иначе выведите «NO».
year = int(input())
if year % 4 == 0 and (not year % 100 == 0 or year % 400 == 0):
    print("YES")
else:
    print("NO")

// step 12 //
Даны две различные клетки шахматной доски. Напишите программу, которая определяет, может ли
ладья попасть с первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до
8 каждое, задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES»,
если из первой клетки ходом ладьи можно попасть во вторую, или «NO» в противном случае.
x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if x1 == x2 or y1 == y2:
    print("YES")
else:
    print("NO")

// step 13 //
Даны две различные клетки шахматной доски. Напишите программу,  которая определяет, может ли король попасть с первой клетки на вторую одним ходом. Программа получает на вход четыре числа от 1 до 8 каждое,
задающие номер столбца и номер строки сначала для первой клетки, потом для второй клетки. Программа должна вывести «YES», если из первой клетки ходом
короля можно попасть во вторую, или «NO» в противном случае.
x1, y1, x2, y2 = int(input()), int(input()), int(input()), int(input())
if (x1 == x2 or x1 == x2 - 1 or x1 == x2 + 1) and (y1 == y2 or y1 == y2 + 1 or y1 == y2 - 1):
    print("YES")
else:
    print("NO")
