// step 1 //
Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[2:5])
--- cde ---

// step 2 //
Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[3:])
--- defg ---

// step 3 //
Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[:3])
--- abc ---

// step 4 //
Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[:])
--- abcdefg ---

// step 5 //
Что покажет приведенный ниже фрагмент кода?
s = 'abcdefg'
print(s[::-3])
--- gda ---

// step 6 //
Дополните приведенный код, используя срезы, так чтобы он вывел первые 12 символов строки s.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[:12])

// step 7 //
Дополните приведенный код, используя срезы, так чтобы он вывел последние 9 символов строки s.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[-9:])

// step 8 //
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[::7])

// step 9 //
Дополните приведенный код, используя срезы, так чтобы он вывел строку s в обратном порядке.
s = "In 2010, someone paid 10k Bitcoin for two pizzas."
print(s[::-1])

// step 10 //
На вход программе подается одно слово, записанное в нижнем регистре. Напишите программу, которая определяет является ли оно палиндромом.
string = input()
print('YES' if string == string[::-1] else 'NO')

// step 11 //
На вход программе подается одна строка. Напишите программу, которая выводит:
общее количество символов в строке;
исходную строку повторенную 3 раза;
первый символ строки;
первые три символа строки;
последние три символа строки;
строку в обратном порядке;
строку с удаленным первым и последним символом.
string = input()
print(len(string), string * 3, string[0], string[:3], string[-3:],
      string[::-1], string[1:-1], sep='\n')

// step 12 //
На вход программе подается одна строка. Напишите программу, которая выводит:
третий символ этой строки;
предпоследний символ этой строки;
первые пять символов этой строки;
всю строку, кроме последних двух символов;
все символы с четными индексами;
все символы с нечетными индексами;
все символы в обратном порядке;
все символы строки через один в обратном порядке, начиная с последнего.
string = input()
print(string[2], string[-2], string[:5], string[:-2], string[::2],
      string[1::2], string[::-1], string[::-2], sep='\n')

// step 13 //
На вход программе подается строка текста. Напишите программу, которая разрежет ее на две равные части, переставит их местами и выведет на экран.
string = input()
x = len(string) // 2 + len(string) % 2
print(string[x:] + string[:x])
